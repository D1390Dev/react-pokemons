{"version":3,"sources":["logo.svg","components/PokemonHook.js","components/Pokemons.js","App.js","reportWebVitals.js","index.js"],"names":["PokemonHook","props","refBox","useRef","useState","x","y","state","setState","boxRect","setBoxRect","handleMouseMove","e","persist","clientX","clientY","current","getBoundingClientRect","handleMouseStop","useMove","xPosition","left","width","yPosition","top","height","xOffset","dxNorm","Math","min","max","myStyle","transform","zIndex","className","style","ref","onMouseMove","onMouseLeave","margin","name","color","hp","src","avatar","alt","type","weight","moveOne","moveTwo","atk","def","spd","id","Pokemons","pokemons","setPokemons","useEffect","url","a","fetch","answer","json","results","forEach","element","console","log","classCard","types","pokemon","sprites","front_default","classN","move1","moves","move","move2","healtPoints","stats","base_stat","attack","defense","speed","getPokemons","length","map","el","App","logo","href","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6566bc82.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState, useRef } from \"react\";\r\n/*\r\nconst useMove = () => {\r\n\r\n    const [state, setState] = useState({x: 0, y: 0})\r\n  \r\n    const handleMouseMove = e => {\r\n      e.persist()\r\n      setState(state => ({...state, x: e.clientX, y: e.clientY}))\r\n    }\r\n\r\n    return {\r\n      x: state.x,\r\n      y: state.y,\r\n      handleMouseMove,\r\n    }\r\n}\r\n  \r\nconst PokemonHook = () => {\r\n\r\n    const {x, y, handleMouseMove} = useMove()\r\n\r\n    return (\r\n        <div className=\"\" onMouseMove={ handleMouseMove }>\r\n            <Pokemons valorX={x} valorY={y}></Pokemons>\r\n        </div>\r\n    )\r\n}\r\n  \r\nexport default PokemonHook\r\n*/\r\n/*\r\nfunction useMove (){\r\n\r\n  const [state, setState] = useState({x: 0, y: 0});\r\n  \r\n  const handleMouseMove = e => {\r\n    e.persist()\r\n    setState(state => ({...state, x: e.clientX, y: e.clientY}))\r\n  }\r\n\r\n  return {\r\n    x: state.x,\r\n    y: state.y,\r\n    handleMouseMove,\r\n  }\r\n}\r\n\r\nexport default function PokemonHook () {\r\n\r\n  const {x, y, handleMouseMove} = useMove();\r\n  let styleName =`rotate(${x}deg)`;\r\n\r\n  let styleTrans = {\r\n    rotate: styleName\r\n  }\r\n\r\n  return (\r\n      <div style={{transform:styleTrans.rotate}} onMouseMove={ handleMouseMove }>\r\n          <Pokemons valorX={x} valorY={y}></Pokemons>\r\n      </div>\r\n  )\r\n}\r\n*/\r\n\r\nfunction useMove (){\r\n\r\n  let refBox = useRef();\r\n  const [state, setState] = useState({x: 0, y: 0});\r\n  const [boxRect, setBoxRect] = useState([]);\r\n  \r\n  const handleMouseMove = e => {\r\n    e.persist()\r\n    setState(state => ({...state, x: e.clientX, y: e.clientY}))\r\n    setBoxRect(refBox.current.getBoundingClientRect())\r\n  }\r\n\r\n  const handleMouseStop = () => {\r\n    setState({x: 0, y: 0})\r\n  }\r\n\r\n  return {\r\n    x: state.x,\r\n    y: state.y,\r\n    handleMouseMove,\r\n    handleMouseStop,\r\n    refBox,\r\n    boxRect\r\n  }\r\n}\r\n\r\nexport default function PokemonHook (props) {\r\n\r\n  const {x, y, handleMouseMove, handleMouseStop, refBox, boxRect} = useMove();\r\n\r\n  const xPosition = (x - boxRect.left) / boxRect.width;\r\n  const yPosition = (y - boxRect.top) / boxRect.height - 0.6;\r\n  const xOffset = -(xPosition - 0.6);\r\n  const dxNorm = Math.min(Math.max(xOffset, -0.6), 0.6);\r\n\r\n  let styleName = \"\";\r\n  let styleZIndex = \"\";\r\n\r\n  if(x === 0){\r\n    styleName =`rotate(0deg)`\r\n  }else(\r\n    styleName =`perspective(1000px) rotateY(${dxNorm*45}deg) rotateX(${yPosition*45}deg) scale(120%,120%)`\r\n  );\r\n\r\n  if(y === 0){\r\n    styleZIndex = \"0\"\r\n  }else(\r\n    styleZIndex = \"10\"\r\n  );\r\n\r\n  let myStyle = {\r\n    transform: styleName,\r\n    zIndex: styleZIndex,\r\n  };\r\n\r\n  let pokeStyleHP = {\r\n    margin: '0%',\r\n    color: 'red',\r\n  };\r\n\r\n  return (\r\n      /*<div ref={ refBox } style={ myStyle } onMouseMove={ handleMouseMove } onMouseLeave={ handleMouseStop }>\r\n          <Pokemons valorX={x} valorY={y}></Pokemons>\r\n      </div>*/\r\n\r\n      <div key={ props.id } className=\"poke-box-external\" style={{ width: '33%'}}>\r\n        <div className={ props.className } ref={ refBox } style={ myStyle } onMouseMove={ handleMouseMove } onMouseLeave={ handleMouseStop }>\r\n            <span></span>\r\n            <div className=\"poke-content\">\r\n                <div className=\"poke-name\">\r\n                    <p style={{margin: '0%'}}>{ props.name }</p>\r\n                    <p style={ pokeStyleHP }>{ props.hp } HP</p>\r\n                </div>\r\n                <div className=\"poke-image\">\r\n                    <img src={ props.avatar } alt={ props.name }></img>\r\n                    <div className=\"height-weight\">\r\n                        <p>Type: { props.type }</p>\r\n                        <p>Height: { props.height }meters</p>\r\n                        <p>Weight: { props.weight }Kg</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"poke-moves\">\r\n                    <p>{ props.moveOne }</p>\r\n                    <p>{ props.moveTwo }</p>\r\n                </div>\r\n                <hr style={ {margin: '0.5%'} }/>\r\n                <div className=\"poke-stats\">\r\n                    <p>Attack: { props.atk } </p>\r\n                    <p>Defense: { props.def }</p>\r\n                    <p>Speed: { props.spd }</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n      </div>\r\n  )\r\n}","import React, { useState, useEffect} from \"react\";\r\nimport PokemonHook from \"./PokemonHook\";\r\nimport \"./Pokemons.css\";\r\n\r\nexport default function Pokemons (){\r\n    const [pokemons, setPokemons] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const getPokemons = async(url) => {\r\n            let answer = await fetch(url),\r\n            json = await answer.json();\r\n\r\n            json.results.forEach(async (element) => {\r\n                let answer = await fetch(element.url),\r\n                json = await answer.json();\r\n                console.log(json);\r\n\r\n                //Asignar estilo para cada tipo de carta pokemon\r\n                let classCard = \"\";\r\n                switch(json.types[0].type.name){\r\n                    case 'grass':\r\n                        classCard = \"poke-box-internal pk-grass-bug\";\r\n                        break;\r\n                    case 'fire':\r\n                        classCard = \"poke-box-internal pk-fire\";\r\n                        break;\r\n                    case 'water':\r\n                        classCard = \"poke-box-internal pk-water\";\r\n                        break;\r\n                    case 'bug':\r\n                        classCard = \"poke-box-internal pk-grass-bug\";\r\n                        break;\r\n                    case 'normal':\r\n                        classCard = \"poke-box-internal pk-normal\";\r\n                        break;\r\n                    default:\r\n                        classCard = \"\";\r\n                        break;\r\n                }\r\n\r\n                let pokemon = {\r\n                    id : json.id,\r\n                    name : json.name,\r\n                    type : json.types[0].type.name,\r\n                    avatar : json.sprites.front_default,\r\n                    classN : classCard,\r\n                    move1 : json.moves[0].move.name,\r\n                    move2 : json.moves[1].move.name,\r\n                    healtPoints : json.stats[0].base_stat,\r\n                    attack : json.stats[1].base_stat,\r\n                    defense : json.stats[2].base_stat,\r\n                    speed : json.stats[5].base_stat,\r\n                    height : json.height,\r\n                    weight : json.weight,\r\n                };\r\n\r\n                setPokemons((pokemons) => [...pokemons, pokemon]);\r\n            });\r\n        }\r\n\r\n        getPokemons(\"https://pokeapi.co/api/v2/pokemon/\");\r\n    }, []);\r\n    \r\n    return(\r\n        <>\r\n            <h2>Peticiones asíncronas en Hooks</h2>\r\n            <div className=\"\">\r\n                <div className=\"poke-row\">\r\n                    { pokemons.length === 0 ? (\r\n                        <h3>Cargando...</h3>\r\n                    ): (\r\n                        pokemons.map((el) => (\r\n                            <PokemonHook \r\n                                key={ el.id } \r\n                                avatar={ el.avatar } \r\n                                name={ el.name }\r\n                                type={ el.type } \r\n                                className={ el.classN }\r\n                                moveOne = { el.move1 }\r\n                                moveTwo = { el.move2 }\r\n                                hp = { el.healtPoints }\r\n                                atk = { el.attack }\r\n                                def = { el.defense }\r\n                                spd = { el.speed }\r\n                                height = { el.height / 10 }\r\n                                weight = { el.weight /10 }\r\n                            >\r\n                            </PokemonHook>\r\n                        ))\r\n                    )}\r\n                </div>\r\n            </div>        \r\n        </>\r\n    )\r\n}\r\n","import logo from './logo.svg';\nimport './App.css';\nimport Pokemons from \"./components/Pokemons\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n        <section>\n          <Pokemons></Pokemons>\n        </section>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}